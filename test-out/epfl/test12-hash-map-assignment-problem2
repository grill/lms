Nested: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
Context: List(Sym(0))
ReflectReadMutable repsW: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(0)),Summary(false,false,false,false,false,List((List(Sym(0)),List(HashMapGetTable(Sym(0))))),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(1)),Summary(false,false,false,false,false,List(),List(),List(Sym(1), Sym(0)),List(Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1)))
Nested: WrappedArray(Sym(1)) Def: ArrayApply(Sym(1),Sym(15))
Context: List(Sym(0), Sym(1), Sym(13))
ReflectReadMutable repsW: List(Sym(1))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(1),Sym(15)),Summary(false,false,false,false,false,List((List(Sym(1)),List(ArrayApply(Sym(1),Sym(15))))),List(Sym(1)),List(Sym(1), Sym(0)),List(Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(16)),Summary(false,false,false,false,true,List(),List(),List(Sym(16), Sym(1), Sym(0)),List(Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(0)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16), Sym(17)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(19),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(19), Sym(16), Sym(1), Sym(0)),List(Sym(19), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16), Sym(19)))
Nested: WrappedArray(Sym(1)) Def: ArrayApply(Sym(1),Sym(15))
Context: List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20))
ReflectReadMutable repsW: List(Sym(1))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(1),Sym(15)),Summary(false,false,false,false,false,List((List(Sym(1)),List(ArrayApply(Sym(1),Sym(15))))),List(Sym(1)),List(Sym(1), Sym(0)),List(Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(2)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(16))Def: ArrayUpdate(Sym(1),Sym(15),Sym(21))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(1),Sym(15),Sym(21)),Summary(false,false,false,false,false,List(),List(),List(Sym(1), Sym(0), Sym(21)),List(Sym(1), Sym(0), Sym(21)),List(Sym(16)),List(Sym(16))),List(Sym(0), Sym(1), Sym(16), Sym(17), Sym(19), Sym(20), Sym(21)))
Alias: List(Sym(1), Sym(0), Sym(21))
Write: WrappedArray(Sym(0))Def: HashMapSetSize(Sym(0),Sym(23))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(0),Sym(23)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(Sym(0))),List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(22)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(26)),Summary(false,false,false,false,false,List(),List(),List(Sym(26), Sym(16), Sym(1), Sym(0)),List(Sym(26), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(26)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(28)),Summary(false,false,false,false,false,List(),List(),List(Sym(28), Sym(16), Sym(1), Sym(0)),List(Sym(28), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(28)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(35)),Summary(false,false,false,false,false,List(),List(),List(Sym(35), Sym(16), Sym(1), Sym(0)),List(Sym(35), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(35)))
Write: WrappedArray(Sym(17))Def: Assign(Variable(Sym(17)),Sym(36))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(17)),Sym(36)),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(36), Sym(35), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(36), Sym(35), Sym(16), Sym(1), Sym(0)),List(Sym(17)),List(Sym(17))),List(Sym(35), Sym(36)))
Alias: List(Sym(36), Sym(35), Sym(16), Sym(1), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(34)),Block(Sym(38))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0), Sym(26), Sym(35), Sym(36)),List(Sym(17), Sym(16), Sym(1), Sym(0), Sym(26)),List(Sym(17)),List()),List(Sym(0), Sym(1), Sym(16), Sym(17), Sym(19)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16), Sym(17), Sym(39)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(40)),Summary(false,false,false,false,false,List(),List(),List(Sym(40), Sym(16), Sym(1), Sym(0)),List(Sym(40), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16), Sym(40)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16), Sym(17), Sym(39)))
Write: WrappedArray(Sym(40))Def: EntrySetValue(Sym(40),Const(2))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(40),Const(2)),Summary(false,false,false,false,false,List(),List(),List(Sym(40), Sym(16), Sym(1), Sym(0)),List(Sym(40), Sym(16), Sym(1), Sym(0)),List(Sym(40)),List(Sym(40))),List(Sym(0), Sym(1), Sym(16), Sym(40), Sym(41)))
Alias: List(Sym(16), Sym(1), Sym(0))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(17))),Summary(false,false,false,false,false,List(),List(),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(Sym(17), Sym(16), Sym(1), Sym(0)),List(),List()),List(Sym(0), Sym(1), Sym(16), Sym(17), Sym(39)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(2)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(40))Def: EntrySetNext(Sym(40),Sym(45))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(40),Sym(45)),Summary(false,false,false,false,false,List(),List(),List(Sym(40), Sym(16), Sym(1), Sym(0), Sym(45)),List(Sym(40), Sym(16), Sym(1), Sym(0), Sym(45)),List(Sym(40)),List(Sym(40))),List(Sym(0), Sym(1), Sym(16), Sym(40), Sym(41), Sym(45)))
Alias: List(Sym(16), Sym(1), Sym(0), Sym(45))
Write: WrappedArray(Sym(0))Def: HashMapSetSize(Sym(0),Sym(23))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(0),Sym(23)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(Sym(0))),List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(39), Sym(40), Sym(41), Sym(46)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(42),Block(Sym(44)),Block(Sym(48))),Summary(false,false,false,false,false,List(),List(),List(Sym(40), Sym(16), Sym(1), Sym(0)),List(Sym(40), Sym(16), Sym(1), Sym(0)),List(Sym(40), Sym(0)),List(Sym(40))),List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(39), Sym(40), Sym(41)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(20),Block(Sym(25)),Block(Sym(50))),Summary(false,false,false,false,false,List(),List(),List(Sym(1), Sym(0), Sym(17), Sym(16), Sym(26), Sym(35), Sym(36), Sym(40)),List(Sym(1), Sym(0)),List(Sym(16), Sym(0), Sym(17), Sym(40)),List()),List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20)))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(0)),Summary(false,false,false,false,true,List(),List(),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0), Sym(51)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(52))),Summary(false,false,false,false,false,List(),List(),List(Sym(52), Sym(0)),List(Sym(52), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(52)))
Nested: WrappedArray(Sym(53)) Def: HashMapGetTable(Sym(53))
Context: List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(51), Sym(52), Sym(53))
ReflectReadMutable repsW: List(Sym(53))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(53)),Summary(false,false,false,false,false,List((List(Sym(53)),List(HashMapGetTable(Sym(53))))),List(Sym(53)),List(Sym(53), Sym(0)),List(Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(54)),Summary(false,false,false,false,false,List(),List(),List(Sym(54), Sym(53), Sym(0)),List(Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54)))
Nested: WrappedArray(Sym(54)) Def: ArrayApply(Sym(54),Sym(57))
Context: List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(51), Sym(52), Sym(53), Sym(54), Sym(55))
ReflectReadMutable repsW: List(Sym(54))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(54),Sym(57)),Summary(false,false,false,false,false,List((List(Sym(54)),List(ArrayApply(Sym(54),Sym(57))))),List(Sym(54)),List(Sym(54), Sym(53), Sym(0)),List(Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54)))
Alias: List(Sym(53), Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(58)),Summary(false,false,false,false,true,List(),List(),List(Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(53)),Summary(false,false,false,false,false,List(),List(),List(Sym(53), Sym(0)),List(Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(59)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(61),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(61), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(61), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(61)))
Nested: WrappedArray(Sym(54)) Def: ArrayApply(Sym(54),Sym(57))
Context: List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(51), Sym(52), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62))
ReflectReadMutable repsW: List(Sym(54))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(54),Sym(57)),Summary(false,false,false,false,false,List((List(Sym(54)),List(ArrayApply(Sym(54),Sym(57))))),List(Sym(54)),List(Sym(54), Sym(53), Sym(0)),List(Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54)))
Alias: List(Sym(53), Sym(0))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(3)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(58))Def: ArrayUpdate(Sym(54),Sym(57),Sym(63))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(54),Sym(57),Sym(63)),Summary(false,false,false,false,false,List(),List(),List(Sym(54), Sym(53), Sym(0), Sym(63)),List(Sym(54), Sym(53), Sym(0), Sym(63)),List(Sym(58)),List(Sym(58))),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(59), Sym(61), Sym(62), Sym(63)))
Alias: List(Sym(54), Sym(53), Sym(0), Sym(63))
Write: WrappedArray(Sym(53))Def: HashMapSetSize(Sym(53),Sym(65))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(53),Sym(65)),Summary(false,false,false,false,false,List(),List(),List(Sym(53), Sym(0)),List(Sym(53), Sym(0)),List(Sym(53)),List(Sym(53))),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62), Sym(64)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(68)),Summary(false,false,false,false,false,List(),List(),List(Sym(68), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(68), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(68)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(70)),Summary(false,false,false,false,false,List(),List(),List(Sym(70), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(70), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(70)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(77)),Summary(false,false,false,false,false,List(),List(),List(Sym(77), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(77), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(77)))
Write: WrappedArray(Sym(59))Def: Assign(Variable(Sym(59)),Sym(78))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(59)),Sym(78)),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(78), Sym(77), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(78), Sym(77), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59)),List(Sym(59))),List(Sym(77), Sym(78)))
Alias: List(Sym(78), Sym(77), Sym(58), Sym(54), Sym(53), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(76)),Block(Sym(80))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0), Sym(68), Sym(77), Sym(78)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0), Sym(68)),List(Sym(59)),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(59), Sym(61)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(59), Sym(81)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(82)),Summary(false,false,false,false,false,List(),List(),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(82)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(59), Sym(81)))
Write: WrappedArray(Sym(82))Def: EntrySetValue(Sym(82),Const(3))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(82),Const(3)),Summary(false,false,false,false,false,List(),List(),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(82)),List(Sym(82))),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(82), Sym(83)))
Alias: List(Sym(58), Sym(54), Sym(53), Sym(0))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(59))),Summary(false,false,false,false,false,List(),List(),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(59), Sym(58), Sym(54), Sym(53), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(59), Sym(81)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(3)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(82))Def: EntrySetNext(Sym(82),Sym(87))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(82),Sym(87)),Summary(false,false,false,false,false,List(),List(),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0), Sym(87)),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0), Sym(87)),List(Sym(82)),List(Sym(82))),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(58), Sym(82), Sym(83), Sym(87)))
Alias: List(Sym(58), Sym(54), Sym(53), Sym(0), Sym(87))
Write: WrappedArray(Sym(53))Def: HashMapSetSize(Sym(53),Sym(65))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(53),Sym(65)),Summary(false,false,false,false,false,List(),List(),List(Sym(53), Sym(0)),List(Sym(53), Sym(0)),List(Sym(53)),List(Sym(53))),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62), Sym(81), Sym(82), Sym(83), Sym(88)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(84),Block(Sym(86)),Block(Sym(90))),Summary(false,false,false,false,false,List(),List(),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(82), Sym(58), Sym(54), Sym(53), Sym(0)),List(Sym(82), Sym(53)),List(Sym(82))),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62), Sym(81), Sym(82), Sym(83)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(62),Block(Sym(67)),Block(Sym(92))),Summary(false,false,false,false,false,List(),List(),List(Sym(54), Sym(53), Sym(0), Sym(59), Sym(58), Sym(68), Sym(77), Sym(78), Sym(82)),List(Sym(54), Sym(53), Sym(0)),List(Sym(58), Sym(53), Sym(59), Sym(82)),List()),List(Sym(0), Sym(51), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62)))
Nested: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
Context: List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(51), Sym(52), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62), Sym(93))
ReflectReadMutable repsW: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(0)),Summary(false,false,false,false,false,List((List(Sym(0)),List(HashMapGetTable(Sym(0))))),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0), Sym(51)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(94)),Summary(false,false,false,false,false,List(),List(),List(Sym(94), Sym(0)),List(Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94)))
Nested: WrappedArray(Sym(94)) Def: ArrayApply(Sym(94),Sym(97))
Context: List(Sym(0), Sym(1), Sym(13), Sym(16), Sym(17), Sym(18), Sym(19), Sym(20), Sym(51), Sym(52), Sym(53), Sym(54), Sym(55), Sym(58), Sym(59), Sym(60), Sym(61), Sym(62), Sym(93), Sym(94), Sym(95))
ReflectReadMutable repsW: List(Sym(94))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(94),Sym(97)),Summary(false,false,false,false,false,List((List(Sym(94)),List(ArrayApply(Sym(94),Sym(97))))),List(Sym(94)),List(Sym(94), Sym(0)),List(Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(98)),Summary(false,false,false,false,true,List(),List(),List(Sym(98), Sym(94), Sym(0)),List(Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(99))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(99)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(100),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(100), Sym(98), Sym(94), Sym(0)),List(Sym(100), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(100)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(99))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(102)),Summary(false,false,false,false,false,List(),List(),List(Sym(102), Sym(98), Sym(94), Sym(0)),List(Sym(102), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(102)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(99))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(104)),Summary(false,false,false,false,false,List(),List(),List(Sym(104), Sym(98), Sym(94), Sym(0)),List(Sym(104), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(104)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(99))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(111)),Summary(false,false,false,false,false,List(),List(),List(Sym(111), Sym(98), Sym(94), Sym(0)),List(Sym(111), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(111)))
Write: WrappedArray(Sym(99))Def: Assign(Variable(Sym(99)),Sym(112))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(99)),Sym(112)),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(112), Sym(111), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(112), Sym(111), Sym(98), Sym(94), Sym(0)),List(Sym(99)),List(Sym(99))),List(Sym(111), Sym(112)))
Alias: List(Sym(112), Sym(111), Sym(98), Sym(94), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(110)),Block(Sym(114))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0), Sym(102), Sym(111), Sym(112)),List(Sym(99), Sym(98), Sym(94), Sym(0), Sym(102)),List(Sym(99)),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(99), Sym(100)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(99))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(99), Sym(115)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(116)),Summary(false,false,false,false,false,List(),List(),List(Sym(116), Sym(98), Sym(94), Sym(0)),List(Sym(116), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(116)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(99))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(Sym(99), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(99), Sym(115)))
NestedDeps: List()
Reflect: Reflect(EntryGetValue(Sym(116)),Summary(false,false,false,false,false,List(),List(),List(Sym(116), Sym(98), Sym(94), Sym(0)),List(Sym(116), Sym(98), Sym(94), Sym(0)),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(116)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(118),Block(Sym(120)),Block(Const(null))),Summary(false,false,false,false,false,List(),List(),List(Sym(116), Sym(98), Sym(94), Sym(0)),List(),List(),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(116)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(101),Block(Const(null)),Block(Sym(122))),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(98), Sym(94), Sym(0), Sym(102), Sym(111), Sym(112), Sym(116)),List(),List(Sym(99)),List()),List(Sym(0), Sym(51), Sym(94), Sym(98), Sym(99), Sym(100)))
NestedDeps: List()
Reflect: Reflect(PrintLn(Sym(123)),Summary(true,true,false,false,false,List(),List(),List(),List(),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(NewHashMap(Int,Int),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Nested: WrappedArray(Sym(126)) Def: HashMapGetTable(Sym(126))
Context: List(Sym(126))
ReflectReadMutable repsW: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(126)),Summary(false,false,false,false,false,List((List(Sym(126)),List(HashMapGetTable(Sym(126))))),List(Sym(126)),List(Sym(126)),List(Sym(126)),List(),List()),List(Sym(126)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(127)),Summary(false,false,false,false,false,List(),List(),List(Sym(127), Sym(126)),List(Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127)))
Nested: WrappedArray(Sym(127)) Def: ArrayApply(Sym(127),Sym(130))
Context: List(Sym(126), Sym(127), Sym(128))
ReflectReadMutable repsW: List(Sym(127))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(127),Sym(130)),Summary(false,false,false,false,false,List((List(Sym(127)),List(ArrayApply(Sym(127),Sym(130))))),List(Sym(127)),List(Sym(127), Sym(126)),List(Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127)))
Alias: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(131)),Summary(false,false,false,false,true,List(),List(),List(Sym(131), Sym(127), Sym(126)),List(Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(126)),Summary(false,false,false,false,false,List(),List(),List(Sym(126)),List(Sym(126)),List(),List()),List(Sym(126)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131), Sym(132)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(134),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(134), Sym(131), Sym(127), Sym(126)),List(Sym(134), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131), Sym(134)))
Nested: WrappedArray(Sym(127)) Def: ArrayApply(Sym(127),Sym(130))
Context: List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135))
ReflectReadMutable repsW: List(Sym(127))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(127),Sym(130)),Summary(false,false,false,false,false,List((List(Sym(127)),List(ArrayApply(Sym(127),Sym(130))))),List(Sym(127)),List(Sym(127), Sym(126)),List(Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127)))
Alias: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(2)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(131))Def: ArrayUpdate(Sym(127),Sym(130),Sym(136))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(127),Sym(130),Sym(136)),Summary(false,false,false,false,false,List(),List(),List(Sym(127), Sym(126), Sym(136)),List(Sym(127), Sym(126), Sym(136)),List(Sym(131)),List(Sym(131))),List(Sym(126), Sym(127), Sym(131), Sym(132), Sym(134), Sym(135), Sym(136)))
Alias: List(Sym(127), Sym(126), Sym(136))
Write: WrappedArray(Sym(126))Def: HashMapSetSize(Sym(126),Sym(138))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(126),Sym(138)),Summary(false,false,false,false,false,List(),List(),List(Sym(126)),List(Sym(126)),List(Sym(126)),List(Sym(126))),List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(137)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(141)),Summary(false,false,false,false,false,List(),List(),List(Sym(141), Sym(131), Sym(127), Sym(126)),List(Sym(141), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(141)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(143)),Summary(false,false,false,false,false,List(),List(),List(Sym(143), Sym(131), Sym(127), Sym(126)),List(Sym(143), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(143)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(150)),Summary(false,false,false,false,false,List(),List(),List(Sym(150), Sym(131), Sym(127), Sym(126)),List(Sym(150), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(150)))
Write: WrappedArray(Sym(132))Def: Assign(Variable(Sym(132)),Sym(151))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(132)),Sym(151)),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(151), Sym(150), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(151), Sym(150), Sym(131), Sym(127), Sym(126)),List(Sym(132)),List(Sym(132))),List(Sym(150), Sym(151)))
Alias: List(Sym(151), Sym(150), Sym(131), Sym(127), Sym(126))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(149)),Block(Sym(153))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126), Sym(141), Sym(150), Sym(151)),List(Sym(132), Sym(131), Sym(127), Sym(126), Sym(141)),List(Sym(132)),List()),List(Sym(126), Sym(127), Sym(131), Sym(132), Sym(134)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131), Sym(132), Sym(154)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(155)),Summary(false,false,false,false,false,List(),List(),List(Sym(155), Sym(131), Sym(127), Sym(126)),List(Sym(155), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131), Sym(155)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131), Sym(132), Sym(154)))
Write: WrappedArray(Sym(155))Def: EntrySetValue(Sym(155),Const(2))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(155),Const(2)),Summary(false,false,false,false,false,List(),List(),List(Sym(155), Sym(131), Sym(127), Sym(126)),List(Sym(155), Sym(131), Sym(127), Sym(126)),List(Sym(155)),List(Sym(155))),List(Sym(126), Sym(127), Sym(131), Sym(155), Sym(156)))
Alias: List(Sym(131), Sym(127), Sym(126))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(132))),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(Sym(132), Sym(131), Sym(127), Sym(126)),List(),List()),List(Sym(126), Sym(127), Sym(131), Sym(132), Sym(154)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(2)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(155))Def: EntrySetNext(Sym(155),Sym(160))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(155),Sym(160)),Summary(false,false,false,false,false,List(),List(),List(Sym(155), Sym(131), Sym(127), Sym(126), Sym(160)),List(Sym(155), Sym(131), Sym(127), Sym(126), Sym(160)),List(Sym(155)),List(Sym(155))),List(Sym(126), Sym(127), Sym(131), Sym(155), Sym(156), Sym(160)))
Alias: List(Sym(131), Sym(127), Sym(126), Sym(160))
Write: WrappedArray(Sym(126))Def: HashMapSetSize(Sym(126),Sym(138))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(126),Sym(138)),Summary(false,false,false,false,false,List(),List(),List(Sym(126)),List(Sym(126)),List(Sym(126)),List(Sym(126))),List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(154), Sym(155), Sym(156), Sym(161)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(157),Block(Sym(159)),Block(Sym(163))),Summary(false,false,false,false,false,List(),List(),List(Sym(155), Sym(131), Sym(127), Sym(126)),List(Sym(155), Sym(131), Sym(127), Sym(126)),List(Sym(155), Sym(126)),List(Sym(155))),List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(154), Sym(155), Sym(156)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(135),Block(Sym(140)),Block(Sym(165))),Summary(false,false,false,false,false,List(),List(),List(Sym(127), Sym(126), Sym(132), Sym(131), Sym(141), Sym(150), Sym(151), Sym(155)),List(Sym(127), Sym(126)),List(Sym(131), Sym(126), Sym(132), Sym(155)),List()),List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135)))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(126)),Summary(false,false,false,false,true,List(),List(),List(Sym(126)),List(Sym(126)),List(),List()),List(Sym(126), Sym(166)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(167))),Summary(false,false,false,false,false,List(),List(),List(Sym(167), Sym(126)),List(Sym(167), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(167)))
Nested: WrappedArray(Sym(168)) Def: HashMapGetTable(Sym(168))
Context: List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(166), Sym(167), Sym(168))
ReflectReadMutable repsW: List(Sym(168))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(168)),Summary(false,false,false,false,false,List((List(Sym(168)),List(HashMapGetTable(Sym(168))))),List(Sym(168)),List(Sym(168), Sym(126)),List(Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168)))
Alias: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(169)),Summary(false,false,false,false,false,List(),List(),List(Sym(169), Sym(168), Sym(126)),List(Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169)))
Nested: WrappedArray(Sym(169)) Def: ArrayApply(Sym(169),Sym(172))
Context: List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(166), Sym(167), Sym(168), Sym(169), Sym(170))
ReflectReadMutable repsW: List(Sym(169))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(169),Sym(172)),Summary(false,false,false,false,false,List((List(Sym(169)),List(ArrayApply(Sym(169),Sym(172))))),List(Sym(169)),List(Sym(169), Sym(168), Sym(126)),List(Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169)))
Alias: List(Sym(168), Sym(126))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(173)),Summary(false,false,false,false,true,List(),List(),List(Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(168)),Summary(false,false,false,false,false,List(),List(),List(Sym(168), Sym(126)),List(Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(174)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(176),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(176), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(176), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(176)))
Nested: WrappedArray(Sym(169)) Def: ArrayApply(Sym(169),Sym(172))
Context: List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(166), Sym(167), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177))
ReflectReadMutable repsW: List(Sym(169))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(169),Sym(172)),Summary(false,false,false,false,false,List((List(Sym(169)),List(ArrayApply(Sym(169),Sym(172))))),List(Sym(169)),List(Sym(169), Sym(168), Sym(126)),List(Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169)))
Alias: List(Sym(168), Sym(126))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(3)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(173))Def: ArrayUpdate(Sym(169),Sym(172),Sym(178))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(169),Sym(172),Sym(178)),Summary(false,false,false,false,false,List(),List(),List(Sym(169), Sym(168), Sym(126), Sym(178)),List(Sym(169), Sym(168), Sym(126), Sym(178)),List(Sym(173)),List(Sym(173))),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(174), Sym(176), Sym(177), Sym(178)))
Alias: List(Sym(169), Sym(168), Sym(126), Sym(178))
Write: WrappedArray(Sym(168))Def: HashMapSetSize(Sym(168),Sym(180))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(168),Sym(180)),Summary(false,false,false,false,false,List(),List(),List(Sym(168), Sym(126)),List(Sym(168), Sym(126)),List(Sym(168)),List(Sym(168))),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177), Sym(179)))
Alias: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(183)),Summary(false,false,false,false,false,List(),List(),List(Sym(183), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(183), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(183)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(185)),Summary(false,false,false,false,false,List(),List(),List(Sym(185), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(185), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(185)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(192)),Summary(false,false,false,false,false,List(),List(),List(Sym(192), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(192), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(192)))
Write: WrappedArray(Sym(174))Def: Assign(Variable(Sym(174)),Sym(193))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(174)),Sym(193)),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(193), Sym(192), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(193), Sym(192), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174)),List(Sym(174))),List(Sym(192), Sym(193)))
Alias: List(Sym(193), Sym(192), Sym(173), Sym(169), Sym(168), Sym(126))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(191)),Block(Sym(195))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126), Sym(183), Sym(192), Sym(193)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126), Sym(183)),List(Sym(174)),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(174), Sym(176)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(174), Sym(196)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(197)),Summary(false,false,false,false,false,List(),List(),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(197)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(174), Sym(196)))
Write: WrappedArray(Sym(197))Def: EntrySetValue(Sym(197),Const(3))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(197),Const(3)),Summary(false,false,false,false,false,List(),List(),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(197)),List(Sym(197))),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(197), Sym(198)))
Alias: List(Sym(173), Sym(169), Sym(168), Sym(126))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(174))),Summary(false,false,false,false,false,List(),List(),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(174), Sym(173), Sym(169), Sym(168), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(174), Sym(196)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(1),Const(3)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(197))Def: EntrySetNext(Sym(197),Sym(202))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(197),Sym(202)),Summary(false,false,false,false,false,List(),List(),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126), Sym(202)),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126), Sym(202)),List(Sym(197)),List(Sym(197))),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(173), Sym(197), Sym(198), Sym(202)))
Alias: List(Sym(173), Sym(169), Sym(168), Sym(126), Sym(202))
Write: WrappedArray(Sym(168))Def: HashMapSetSize(Sym(168),Sym(180))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(168),Sym(180)),Summary(false,false,false,false,false,List(),List(),List(Sym(168), Sym(126)),List(Sym(168), Sym(126)),List(Sym(168)),List(Sym(168))),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177), Sym(196), Sym(197), Sym(198), Sym(203)))
Alias: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(199),Block(Sym(201)),Block(Sym(205))),Summary(false,false,false,false,false,List(),List(),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(197), Sym(173), Sym(169), Sym(168), Sym(126)),List(Sym(197), Sym(168)),List(Sym(197))),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177), Sym(196), Sym(197), Sym(198)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(177),Block(Sym(182)),Block(Sym(207))),Summary(false,false,false,false,false,List(),List(),List(Sym(169), Sym(168), Sym(126), Sym(174), Sym(173), Sym(183), Sym(192), Sym(193), Sym(197)),List(Sym(169), Sym(168), Sym(126)),List(Sym(173), Sym(168), Sym(174), Sym(197)),List()),List(Sym(126), Sym(166), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177)))
Nested: WrappedArray(Sym(126)) Def: HashMapGetTable(Sym(126))
Context: List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(166), Sym(167), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177), Sym(208))
ReflectReadMutable repsW: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(126)),Summary(false,false,false,false,false,List((List(Sym(126)),List(HashMapGetTable(Sym(126))))),List(Sym(126)),List(Sym(126)),List(Sym(126)),List(),List()),List(Sym(126), Sym(166)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(209)),Summary(false,false,false,false,false,List(),List(),List(Sym(209), Sym(126)),List(Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209)))
Nested: WrappedArray(Sym(209)) Def: ArrayApply(Sym(209),Sym(212))
Context: List(Sym(126), Sym(127), Sym(128), Sym(131), Sym(132), Sym(133), Sym(134), Sym(135), Sym(166), Sym(167), Sym(168), Sym(169), Sym(170), Sym(173), Sym(174), Sym(175), Sym(176), Sym(177), Sym(208), Sym(209), Sym(210))
ReflectReadMutable repsW: List(Sym(209))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(209),Sym(212)),Summary(false,false,false,false,false,List((List(Sym(209)),List(ArrayApply(Sym(209),Sym(212))))),List(Sym(209)),List(Sym(209), Sym(126)),List(Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209)))
Alias: List(Sym(126))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(213)),Summary(false,false,false,false,true,List(),List(),List(Sym(213), Sym(209), Sym(126)),List(Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(214))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(214)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(215),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(215), Sym(213), Sym(209), Sym(126)),List(Sym(215), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(215)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(214))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(217)),Summary(false,false,false,false,false,List(),List(),List(Sym(217), Sym(213), Sym(209), Sym(126)),List(Sym(217), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(217)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(214))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(219)),Summary(false,false,false,false,false,List(),List(),List(Sym(219), Sym(213), Sym(209), Sym(126)),List(Sym(219), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(219)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(214))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(226)),Summary(false,false,false,false,false,List(),List(),List(Sym(226), Sym(213), Sym(209), Sym(126)),List(Sym(226), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(226)))
Write: WrappedArray(Sym(214))Def: Assign(Variable(Sym(214)),Sym(227))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(214)),Sym(227)),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(227), Sym(226), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(227), Sym(226), Sym(213), Sym(209), Sym(126)),List(Sym(214)),List(Sym(214))),List(Sym(226), Sym(227)))
Alias: List(Sym(227), Sym(226), Sym(213), Sym(209), Sym(126))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(225)),Block(Sym(229))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126), Sym(217), Sym(226), Sym(227)),List(Sym(214), Sym(213), Sym(209), Sym(126), Sym(217)),List(Sym(214)),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(214), Sym(215)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(214))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(214), Sym(230)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(231)),Summary(false,false,false,false,false,List(),List(),List(Sym(231), Sym(213), Sym(209), Sym(126)),List(Sym(231), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(231)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(214))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(Sym(214), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(214), Sym(230)))
NestedDeps: List()
Reflect: Reflect(EntryGetValue(Sym(231)),Summary(false,false,false,false,false,List(),List(),List(Sym(231), Sym(213), Sym(209), Sym(126)),List(Sym(231), Sym(213), Sym(209), Sym(126)),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(231)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(233),Block(Sym(235)),Block(Const(null))),Summary(false,false,false,false,false,List(),List(),List(Sym(231), Sym(213), Sym(209), Sym(126)),List(),List(),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(231)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(216),Block(Const(null)),Block(Sym(237))),Summary(false,false,false,false,false,List(),List(),List(Sym(214), Sym(213), Sym(209), Sym(126), Sym(217), Sym(226), Sym(227), Sym(231)),List(),List(Sym(214)),List()),List(Sym(126), Sym(166), Sym(209), Sym(213), Sym(214), Sym(215)))
NestedDeps: List()
Reflect: Reflect(PrintLn(Sym(238)),Summary(true,true,false,false,false,List(),List(),List(),List(),List(),List()),List())
/*****************************************
  Emitting Generated Code                  
*******************************************/
class IntHashMapAssignmentProblem2 extends ((Int)=>(Unit)) {
def apply(x125:Int): Unit = {
val x126 = new HashMap[Int,Int]()
val x127 = x126.table
val x128 = x127.length
val x2 = 1.hashCode
val x3 = x2.toLong
val x4 = x3 >>> 20
val x5 = x3 >>> 12
val x6 = x4 ^ x5
val x7 = x6 ^ x3
val x8 = x7 >>> 7
val x9 = x7 ^ x8
val x10 = x7 >>> 4
val x11 = x9 ^ x10
val x12 = x11.toInt
val x129 = x128 - 1
val x130 = x12 & x129
val x131 = x127(x130)
var x132 = x131
val x133 = x126.size
val x134 = x132
val x135 = x134 == null
if (x135) {
val x136 = new Entry(1, 2)
x127(x130) = x136
val x138 = x133 + 1
x126.size = x138

} else {
while ({
val x141 = x132
val x142 = x141.hasNext
val x148 = if (x142) {
val x143 = x132
val x144 = x143.key
val x145 = x144 != 1

x145
} else false

x148
}) {
val x150 = x132
val x151 = x150.next
x132 = x151
()
}
val x155 = x132
val x156 = x155.key
val x157 = x156 == 1
if (x157) {
x155.value = 2

} else {
val x160 = new Entry(1, 2)
x155.next = x160
val x138 = x133 + 1
x126.size = x138

}

}
var x167 = x126
val x168 = x167
val x169 = x168.table
val x170 = x169.length
val x171 = x170 - 1
val x172 = x12 & x171
val x173 = x169(x172)
var x174 = x173
val x175 = x168.size
val x176 = x174
val x177 = x176 == null
if (x177) {
val x178 = new Entry(1, 3)
x169(x172) = x178
val x180 = x175 + 1
x168.size = x180

} else {
while ({
val x183 = x174
val x184 = x183.hasNext
val x190 = if (x184) {
val x185 = x174
val x186 = x185.key
val x187 = x186 != 1

x187
} else false

x190
}) {
val x192 = x174
val x193 = x192.next
x174 = x193
()
}
val x197 = x174
val x198 = x197.key
val x199 = x198 == 1
if (x199) {
x197.value = 3

} else {
val x202 = new Entry(1, 3)
x197.next = x202
val x180 = x175 + 1
x168.size = x180

}

}
val x209 = x126.table
val x210 = x209.length
val x211 = x210 - 1
val x212 = x12 & x211
val x213 = x209(x212)
var x214 = x213
val x215 = x214
val x216 = x215 == null
val x238 = if (x216) {
null
} else {
while ({
val x217 = x214
val x218 = x217.hasNext
val x224 = if (x218) {
val x219 = x214
val x220 = x219.key
val x221 = x220 != 1

x221
} else false

x224
}) {
val x226 = x214
val x227 = x226.next
x214 = x227
()
}
val x231 = x214
val x232 = x231.key
val x233 = x232 == 1
val x236 = if (x233) {
val x234 = x231.value
x234
} else {
null
}
x236
}
println(x238)
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
