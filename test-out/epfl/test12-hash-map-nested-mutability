reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
ReflectReadMutable: List(Sym(1)) deps: List(Sym(0))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetSize(Sym(0))
ReflectReadMutable: List(Sym(2)) deps: List(Sym(0))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetLoadFactor(Sym(0))
ReflectReadMutable: List(Sym(3)) deps: List(Sym(0))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapMAXIMUM_CAPACITY(Sym(0))
ReflectReadMutable: List(Sym(4)) deps: List(Sym(0))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetThreshold(Sym(0))
ReflectReadMutable: List(Sym(5)) deps: List(Sym(0))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
ReflectReadMutable: List(Sym(1)) deps: List(Sym(0))
Write: WrappedArray(Sym(1))Def: HashMapSetTable(Sym(0),Sym(6))
AliasRep: List(Sym(6), Sym(1)) deps: List(Sym(0), Sym(1), Sym(6))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
ReflectReadMutable: List(Sym(6), Sym(1)) deps: List(Sym(0), Sym(7))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
ReflectReadMutable: List(Sym(6), Sym(1)) deps: List(Sym(0), Sym(7))
reflectReadMutable: WrappedArray(Sym(8)) Def: ArrayApply(Sym(8),Const(0))
ReflectReadMutable: List(Sym(9)) deps: List(Sym(0), Sym(8))
reflectReadMutable: WrappedArray(Sym(6)) Def: ArrayApply(Sym(6),Const(0))
ReflectReadMutable: List(Sym(11)) deps: List(Sym(6))
Write: WrappedArray(Sym(11))Def: ArrayUpdate(Sym(6),Const(0),Sym(12))
AliasRep: List(Sym(12), Sym(11)) deps: List(Sym(6), Sym(11), Sym(12))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
ReflectReadMutable: List(Sym(6), Sym(1)) deps: List(Sym(0), Sym(7))
reflectReadMutable: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
ReflectReadMutable: List(Sym(6), Sym(1)) deps: List(Sym(0), Sym(7))
reflectReadMutable: WrappedArray(Sym(8)) Def: ArrayApply(Sym(8),Const(0))
ReflectReadMutable: List(Sym(12), Sym(11)) deps: List(Sym(0), Sym(8), Sym(13))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetTable(Sym(17))
ReflectReadMutable: List(Sym(18)) deps: List(Sym(17))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetSize(Sym(17))
ReflectReadMutable: List(Sym(19)) deps: List(Sym(17))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetLoadFactor(Sym(17))
ReflectReadMutable: List(Sym(20)) deps: List(Sym(17))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapMAXIMUM_CAPACITY(Sym(17))
ReflectReadMutable: List(Sym(21)) deps: List(Sym(17))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetThreshold(Sym(17))
ReflectReadMutable: List(Sym(22)) deps: List(Sym(17))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetTable(Sym(17))
ReflectReadMutable: List(Sym(18)) deps: List(Sym(17))
Write: WrappedArray(Sym(18))Def: HashMapSetTable(Sym(17),Sym(23))
AliasRep: List(Sym(23), Sym(18)) deps: List(Sym(17), Sym(18), Sym(23))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetTable(Sym(17))
ReflectReadMutable: List(Sym(23), Sym(18)) deps: List(Sym(17), Sym(24))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetTable(Sym(17))
ReflectReadMutable: List(Sym(23), Sym(18)) deps: List(Sym(17), Sym(24))
reflectReadMutable: WrappedArray(Sym(25)) Def: ArrayApply(Sym(25),Const(0))
ReflectReadMutable: List(Sym(26)) deps: List(Sym(17), Sym(25))
reflectReadMutable: WrappedArray(Sym(23)) Def: ArrayApply(Sym(23),Const(0))
ReflectReadMutable: List(Sym(28)) deps: List(Sym(23))
Write: WrappedArray(Sym(28))Def: ArrayUpdate(Sym(23),Const(0),Sym(29))
AliasRep: List(Sym(29), Sym(28)) deps: List(Sym(23), Sym(28), Sym(29))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetTable(Sym(17))
ReflectReadMutable: List(Sym(23), Sym(18)) deps: List(Sym(17), Sym(24))
reflectReadMutable: WrappedArray(Sym(17)) Def: HashMapGetTable(Sym(17))
ReflectReadMutable: List(Sym(23), Sym(18)) deps: List(Sym(17), Sym(24))
reflectReadMutable: WrappedArray(Sym(25)) Def: ArrayApply(Sym(25),Const(0))
ReflectReadMutable: List(Sym(29), Sym(28)) deps: List(Sym(17), Sym(25), Sym(30))
/*****************************************
  Emitting Generated Code                  
*******************************************/
class IntHashMapNestedMutability extends ((Int)=>(Unit)) {
def apply(x16:Int): Unit = {
val x17 = new HashMap[Int,Int](200)
val x18 = x17.table
val x19 = x17.size
val x20 = x17.loadFactor
val x21 = x17.MAXIMUM_CAPACITY
val x22 = x17.threshold
val x23 = new Array[scala.virtualization.lms.epfl.test12.Entry[Int, Int]](10)
x17.table = x23
val x25 = x17.table
val x26 = x25(0)
println(x26)
val x28 = x23(0)
val x29 = new Entry(0, 1)
x23(0) = x29
val x31 = x25(0)
println(x31)
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
