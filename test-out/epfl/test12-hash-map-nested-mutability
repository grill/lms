AliasRep: List(Sym(1), Sym(2)) deps: List(Sym(0), Sym(1), Sym(2))
AliasRep: List(Sym(8), Sym(7)) deps: List(Sym(1), Sym(7), Sym(8))
AliasRep: List(Sym(14), Sym(15)) deps: List(Sym(13), Sym(14), Sym(15))
AliasRep: List(Sym(21), Sym(20)) deps: List(Sym(14), Sym(20), Sym(21))
/*****************************************
  Emitting Generated Code                  
*******************************************/
class IntHashMapNestedMutability extends ((Int)=>(Unit)) {
def apply(x12:Int): Unit = {
val x13 = new HashMap[Int,Int](200)
val x14 = new Array[scala.virtualization.lms.epfl.test12.Entry[Int, Int]](10)
val x15 = x13.table
x13.table = x14
val x17 = x13.table
val x18 = x17(0)
println(x18)
val x20 = x14(0)
val x21 = new Entry(0, 1)
x14(0) = x21
val x23 = x17(0)
println(x23)
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
