NestedDeps: List()
Reflect: Reflect(NewVar(Const(1)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(1))Def: Assign(Variable(Sym(1)),Const(2))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(1)),Const(2)),Summary(false,false,false,false,false,List(),List(),List(Sym(1)),List(Sym(1)),List(Sym(1)),List(Sym(1))),List(Sym(1)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(1))),Summary(false,false,false,false,false,List(),List(),List(Sym(1)),List(Sym(1)),List(),List()),List(Sym(1), Sym(2)))
Nested: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3))
ReflectReadMutable repsW: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(0)),Summary(false,false,false,false,false,List((List(Sym(0)),List(HashMapGetTable(Sym(0))))),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(4)),Summary(false,false,false,false,false,List(),List(),List(Sym(4), Sym(0)),List(Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4)))
Nested: WrappedArray(Sym(4)) Def: ArrayApply(Sym(4),Sym(18))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16))
ReflectReadMutable repsW: List(Sym(4))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(4),Sym(18)),Summary(false,false,false,false,false,List((List(Sym(4)),List(ArrayApply(Sym(4),Sym(18))))),List(Sym(4)),List(Sym(4), Sym(0)),List(Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(19)),Summary(false,false,false,false,true,List(),List(),List(Sym(19), Sym(4), Sym(0)),List(Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(0)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19), Sym(20)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(22),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(22), Sym(19), Sym(4), Sym(0)),List(Sym(22), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19), Sym(22)))
Nested: WrappedArray(Sym(4)) Def: ArrayApply(Sym(4),Sym(18))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23))
ReflectReadMutable repsW: List(Sym(4))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(4),Sym(18)),Summary(false,false,false,false,false,List((List(Sym(4)),List(ArrayApply(Sym(4),Sym(18))))),List(Sym(4)),List(Sym(4), Sym(0)),List(Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(2),Sym(3)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(19))Def: ArrayUpdate(Sym(4),Sym(18),Sym(24))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(4),Sym(18),Sym(24)),Summary(false,false,false,false,false,List(),List(),List(Sym(4), Sym(0), Sym(24)),List(Sym(4), Sym(0), Sym(24)),List(Sym(19)),List(Sym(19))),List(Sym(0), Sym(4), Sym(19), Sym(20), Sym(22), Sym(23), Sym(24)))
Alias: List(Sym(4), Sym(0), Sym(24))
Write: WrappedArray(Sym(0))Def: HashMapSetSize(Sym(0),Sym(26))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(0),Sym(26)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(Sym(0))),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(25)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(29)),Summary(false,false,false,false,false,List(),List(),List(Sym(29), Sym(19), Sym(4), Sym(0)),List(Sym(29), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(29)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(31)),Summary(false,false,false,false,false,List(),List(),List(Sym(31), Sym(19), Sym(4), Sym(0)),List(Sym(31), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(31)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(38)),Summary(false,false,false,false,false,List(),List(),List(Sym(38), Sym(19), Sym(4), Sym(0)),List(Sym(38), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(38)))
Write: WrappedArray(Sym(20))Def: Assign(Variable(Sym(20)),Sym(39))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(20)),Sym(39)),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(39), Sym(38), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(39), Sym(38), Sym(19), Sym(4), Sym(0)),List(Sym(20)),List(Sym(20))),List(Sym(38), Sym(39)))
Alias: List(Sym(39), Sym(38), Sym(19), Sym(4), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(37)),Block(Sym(41))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0), Sym(29), Sym(38), Sym(39)),List(Sym(20), Sym(19), Sym(4), Sym(0), Sym(29)),List(Sym(20)),List()),List(Sym(0), Sym(4), Sym(19), Sym(20), Sym(22)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19), Sym(20), Sym(42)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(43)),Summary(false,false,false,false,false,List(),List(),List(Sym(43), Sym(19), Sym(4), Sym(0)),List(Sym(43), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19), Sym(43)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19), Sym(20), Sym(42)))
Write: WrappedArray(Sym(43))Def: EntrySetValue(Sym(43),Sym(3))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(43),Sym(3)),Summary(false,false,false,false,false,List(),List(),List(Sym(43), Sym(19), Sym(4), Sym(0)),List(Sym(43), Sym(19), Sym(4), Sym(0)),List(Sym(43)),List(Sym(43))),List(Sym(0), Sym(4), Sym(19), Sym(43), Sym(44)))
Alias: List(Sym(19), Sym(4), Sym(0))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(20))),Summary(false,false,false,false,false,List(),List(),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(Sym(20), Sym(19), Sym(4), Sym(0)),List(),List()),List(Sym(0), Sym(4), Sym(19), Sym(20), Sym(42)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(2),Sym(3)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(43))Def: EntrySetNext(Sym(43),Sym(48))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(43),Sym(48)),Summary(false,false,false,false,false,List(),List(),List(Sym(43), Sym(19), Sym(4), Sym(0), Sym(48)),List(Sym(43), Sym(19), Sym(4), Sym(0), Sym(48)),List(Sym(43)),List(Sym(43))),List(Sym(0), Sym(4), Sym(19), Sym(43), Sym(44), Sym(48)))
Alias: List(Sym(19), Sym(4), Sym(0), Sym(48))
Write: WrappedArray(Sym(0))Def: HashMapSetSize(Sym(0),Sym(26))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(0),Sym(26)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(Sym(0))),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(42), Sym(43), Sym(44), Sym(49)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(45),Block(Sym(47)),Block(Sym(51))),Summary(false,false,false,false,false,List(),List(),List(Sym(43), Sym(19), Sym(4), Sym(0)),List(Sym(43), Sym(19), Sym(4), Sym(0)),List(Sym(43), Sym(0)),List(Sym(43))),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(42), Sym(43), Sym(44)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(23),Block(Sym(28)),Block(Sym(53))),Summary(false,false,false,false,false,List(),List(),List(Sym(4), Sym(0), Sym(20), Sym(19), Sym(29), Sym(38), Sym(39), Sym(43)),List(Sym(4), Sym(0)),List(Sym(19), Sym(0), Sym(20), Sym(43)),List()),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(1))),Summary(false,false,false,false,false,List(),List(),List(Sym(1)),List(Sym(1)),List(),List()),List(Sym(1), Sym(2)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(1))),Summary(false,false,false,false,false,List(),List(),List(Sym(1)),List(Sym(1)),List(),List()),List(Sym(1), Sym(2)))
Nested: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54))
ReflectReadMutable repsW: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(0)),Summary(false,false,false,false,false,List((List(Sym(0)),List(HashMapGetTable(Sym(0))))),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0), Sym(54)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(55)),Summary(false,false,false,false,false,List(),List(),List(Sym(55), Sym(0)),List(Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55)))
Nested: WrappedArray(Sym(55)) Def: ArrayApply(Sym(55),Sym(69))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67))
ReflectReadMutable repsW: List(Sym(55))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(55),Sym(69)),Summary(false,false,false,false,false,List((List(Sym(55)),List(ArrayApply(Sym(55),Sym(69))))),List(Sym(55)),List(Sym(55), Sym(0)),List(Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(70)),Summary(false,false,false,false,true,List(),List(),List(Sym(70), Sym(55), Sym(0)),List(Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(71))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(71)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(72),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(72), Sym(70), Sym(55), Sym(0)),List(Sym(72), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(72)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(71))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(74)),Summary(false,false,false,false,false,List(),List(),List(Sym(74), Sym(70), Sym(55), Sym(0)),List(Sym(74), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(74)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(71))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(76)),Summary(false,false,false,false,false,List(),List(),List(Sym(76), Sym(70), Sym(55), Sym(0)),List(Sym(76), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(76)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(71))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(83)),Summary(false,false,false,false,false,List(),List(),List(Sym(83), Sym(70), Sym(55), Sym(0)),List(Sym(83), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(83)))
Write: WrappedArray(Sym(71))Def: Assign(Variable(Sym(71)),Sym(84))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(71)),Sym(84)),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(84), Sym(83), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(84), Sym(83), Sym(70), Sym(55), Sym(0)),List(Sym(71)),List(Sym(71))),List(Sym(83), Sym(84)))
Alias: List(Sym(84), Sym(83), Sym(70), Sym(55), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(82)),Block(Sym(86))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0), Sym(74), Sym(83), Sym(84)),List(Sym(71), Sym(70), Sym(55), Sym(0), Sym(74)),List(Sym(71)),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(71), Sym(72)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(71))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(71), Sym(87)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(88)),Summary(false,false,false,false,false,List(),List(),List(Sym(88), Sym(70), Sym(55), Sym(0)),List(Sym(88), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(88)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(71))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(Sym(71), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(71), Sym(87)))
NestedDeps: List()
Reflect: Reflect(EntryGetValue(Sym(88)),Summary(false,false,false,false,false,List(),List(),List(Sym(88), Sym(70), Sym(55), Sym(0)),List(Sym(88), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(88)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(90),Block(Sym(92)),Block(Const(null))),Summary(false,false,false,false,false,List(),List(),List(Sym(88), Sym(70), Sym(55), Sym(0)),List(),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(88)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(73),Block(Const(null)),Block(Sym(94))),Summary(false,false,false,false,false,List(),List(),List(Sym(71), Sym(70), Sym(55), Sym(0), Sym(74), Sym(83), Sym(84), Sym(88)),List(),List(Sym(71)),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(71), Sym(72)))
Nested: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95))
ReflectReadMutable repsW: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(0)),Summary(false,false,false,false,false,List((List(Sym(0)),List(HashMapGetTable(Sym(0))))),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0), Sym(54)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(55)),Summary(false,false,false,false,false,List(),List(),List(Sym(55), Sym(0)),List(Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55)))
Nested: WrappedArray(Sym(55)) Def: ArrayApply(Sym(55),Sym(69))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95))
ReflectReadMutable repsW: List(Sym(55))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(55),Sym(69)),Summary(false,false,false,false,false,List((List(Sym(55)),List(ArrayApply(Sym(55),Sym(69))))),List(Sym(55)),List(Sym(55), Sym(0)),List(Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(70)),Summary(false,false,false,false,true,List(),List(),List(Sym(70), Sym(55), Sym(0)),List(Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(0)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0), Sym(54)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(97)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(99),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(99), Sym(70), Sym(55), Sym(0)),List(Sym(99), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(99)))
Nested: WrappedArray(Sym(55)) Def: ArrayApply(Sym(55),Sym(69))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100))
ReflectReadMutable repsW: List(Sym(55))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(55),Sym(69)),Summary(false,false,false,false,false,List((List(Sym(55)),List(ArrayApply(Sym(55),Sym(69))))),List(Sym(55)),List(Sym(55), Sym(0)),List(Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Sym(3),Sym(96)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(70))Def: ArrayUpdate(Sym(55),Sym(69),Sym(101))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(55),Sym(69),Sym(101)),Summary(false,false,false,false,false,List(),List(),List(Sym(55), Sym(0), Sym(101)),List(Sym(55), Sym(0), Sym(101)),List(Sym(70)),List(Sym(70))),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(99), Sym(100), Sym(101)))
Alias: List(Sym(55), Sym(0), Sym(101))
Write: WrappedArray(Sym(0))Def: HashMapSetSize(Sym(0),Sym(103))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(0),Sym(103)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(Sym(0))),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100), Sym(102)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(106)),Summary(false,false,false,false,false,List(),List(),List(Sym(106), Sym(70), Sym(55), Sym(0)),List(Sym(106), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(106)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(108)),Summary(false,false,false,false,false,List(),List(),List(Sym(108), Sym(70), Sym(55), Sym(0)),List(Sym(108), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(108)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(115)),Summary(false,false,false,false,false,List(),List(),List(Sym(115), Sym(70), Sym(55), Sym(0)),List(Sym(115), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(115)))
Write: WrappedArray(Sym(97))Def: Assign(Variable(Sym(97)),Sym(116))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(97)),Sym(116)),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(116), Sym(115), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(116), Sym(115), Sym(70), Sym(55), Sym(0)),List(Sym(97)),List(Sym(97))),List(Sym(115), Sym(116)))
Alias: List(Sym(116), Sym(115), Sym(70), Sym(55), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(114)),Block(Sym(118))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0), Sym(106), Sym(115), Sym(116)),List(Sym(97), Sym(70), Sym(55), Sym(0), Sym(106)),List(Sym(97)),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(97), Sym(99)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(97), Sym(119)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(120)),Summary(false,false,false,false,false,List(),List(),List(Sym(120), Sym(70), Sym(55), Sym(0)),List(Sym(120), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(120)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(97), Sym(119)))
Write: WrappedArray(Sym(120))Def: EntrySetValue(Sym(120),Sym(96))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(120),Sym(96)),Summary(false,false,false,false,false,List(),List(),List(Sym(120), Sym(70), Sym(55), Sym(0)),List(Sym(120), Sym(70), Sym(55), Sym(0)),List(Sym(120)),List(Sym(120))),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(120), Sym(121)))
Alias: List(Sym(70), Sym(55), Sym(0))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(97))),Summary(false,false,false,false,false,List(),List(),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(Sym(97), Sym(70), Sym(55), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(97), Sym(119)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Sym(3),Sym(96)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(120))Def: EntrySetNext(Sym(120),Sym(125))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(120),Sym(125)),Summary(false,false,false,false,false,List(),List(),List(Sym(120), Sym(70), Sym(55), Sym(0), Sym(125)),List(Sym(120), Sym(70), Sym(55), Sym(0), Sym(125)),List(Sym(120)),List(Sym(120))),List(Sym(0), Sym(54), Sym(55), Sym(70), Sym(120), Sym(121), Sym(125)))
Alias: List(Sym(70), Sym(55), Sym(0), Sym(125))
Write: WrappedArray(Sym(0))Def: HashMapSetSize(Sym(0),Sym(103))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(0),Sym(103)),Summary(false,false,false,false,false,List(),List(),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(Sym(0))),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100), Sym(119), Sym(120), Sym(121), Sym(126)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(122),Block(Sym(124)),Block(Sym(128))),Summary(false,false,false,false,false,List(),List(),List(Sym(120), Sym(70), Sym(55), Sym(0)),List(Sym(120), Sym(70), Sym(55), Sym(0)),List(Sym(120), Sym(0)),List(Sym(120))),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100), Sym(119), Sym(120), Sym(121)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(100),Block(Sym(105)),Block(Sym(130))),Summary(false,false,false,false,false,List(),List(),List(Sym(55), Sym(0), Sym(97), Sym(70), Sym(106), Sym(115), Sym(116), Sym(120)),List(Sym(55), Sym(0)),List(Sym(70), Sym(0), Sym(97), Sym(120)),List()),List(Sym(0), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100)))
Nested: WrappedArray(Sym(0)) Def: HashMapGetTable(Sym(0))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100), Sym(131))
ReflectReadMutable repsW: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(0)),Summary(false,false,false,false,false,List((List(Sym(0)),List(HashMapGetTable(Sym(0))))),List(Sym(0)),List(Sym(0)),List(Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(132)),Summary(false,false,false,false,false,List(),List(),List(Sym(132), Sym(0)),List(Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132)))
Nested: WrappedArray(Sym(132)) Def: ArrayApply(Sym(132),Sym(135))
Context: List(Sym(0), Sym(1), Sym(2), Sym(3), Sym(4), Sym(16), Sym(19), Sym(20), Sym(21), Sym(22), Sym(23), Sym(54), Sym(55), Sym(67), Sym(70), Sym(71), Sym(72), Sym(73), Sym(95), Sym(97), Sym(98), Sym(99), Sym(100), Sym(131), Sym(132), Sym(133))
ReflectReadMutable repsW: List(Sym(132))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(132),Sym(135)),Summary(false,false,false,false,false,List((List(Sym(132)),List(ArrayApply(Sym(132),Sym(135))))),List(Sym(132)),List(Sym(132), Sym(0)),List(Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132)))
Alias: List(Sym(0))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(136)),Summary(false,false,false,false,true,List(),List(),List(Sym(136), Sym(132), Sym(0)),List(Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(137))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(137)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(138),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(138), Sym(136), Sym(132), Sym(0)),List(Sym(138), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(138)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(137))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(140)),Summary(false,false,false,false,false,List(),List(),List(Sym(140), Sym(136), Sym(132), Sym(0)),List(Sym(140), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(140)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(137))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(142)),Summary(false,false,false,false,false,List(),List(),List(Sym(142), Sym(136), Sym(132), Sym(0)),List(Sym(142), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(142)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(137))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(149)),Summary(false,false,false,false,false,List(),List(),List(Sym(149), Sym(136), Sym(132), Sym(0)),List(Sym(149), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(149)))
Write: WrappedArray(Sym(137))Def: Assign(Variable(Sym(137)),Sym(150))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(137)),Sym(150)),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(150), Sym(149), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(150), Sym(149), Sym(136), Sym(132), Sym(0)),List(Sym(137)),List(Sym(137))),List(Sym(149), Sym(150)))
Alias: List(Sym(150), Sym(149), Sym(136), Sym(132), Sym(0))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(148)),Block(Sym(152))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0), Sym(140), Sym(149), Sym(150)),List(Sym(137), Sym(136), Sym(132), Sym(0), Sym(140)),List(Sym(137)),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(137), Sym(138)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(137))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(137), Sym(153)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(154)),Summary(false,false,false,false,false,List(),List(),List(Sym(154), Sym(136), Sym(132), Sym(0)),List(Sym(154), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(154)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(137))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(Sym(137), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(137), Sym(153)))
NestedDeps: List()
Reflect: Reflect(EntryGetValue(Sym(154)),Summary(false,false,false,false,false,List(),List(),List(Sym(154), Sym(136), Sym(132), Sym(0)),List(Sym(154), Sym(136), Sym(132), Sym(0)),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(154)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(156),Block(Sym(158)),Block(Const(null))),Summary(false,false,false,false,false,List(),List(),List(Sym(154), Sym(136), Sym(132), Sym(0)),List(),List(),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(154)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(139),Block(Const(null)),Block(Sym(160))),Summary(false,false,false,false,false,List(),List(),List(Sym(137), Sym(136), Sym(132), Sym(0), Sym(140), Sym(149), Sym(150), Sym(154)),List(),List(Sym(137)),List()),List(Sym(0), Sym(54), Sym(131), Sym(132), Sym(136), Sym(137), Sym(138)))
NestedDeps: List()
Reflect: Reflect(PrintLn(Sym(161)),Summary(true,true,false,false,false,List(),List(),List(),List(),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(NewHashMap(Int,Int),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(NewVar(Const(1)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(165))Def: Assign(Variable(Sym(165)),Const(2))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(165)),Const(2)),Summary(false,false,false,false,false,List(),List(),List(Sym(165)),List(Sym(165)),List(Sym(165)),List(Sym(165))),List(Sym(165)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(165))),Summary(false,false,false,false,false,List(),List(),List(Sym(165)),List(Sym(165)),List(),List()),List(Sym(165), Sym(166)))
Nested: WrappedArray(Sym(164)) Def: HashMapGetTable(Sym(164))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167))
ReflectReadMutable repsW: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(164)),Summary(false,false,false,false,false,List((List(Sym(164)),List(HashMapGetTable(Sym(164))))),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(),List()),List(Sym(164)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(168)),Summary(false,false,false,false,false,List(),List(),List(Sym(168), Sym(164)),List(Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168)))
Nested: WrappedArray(Sym(168)) Def: ArrayApply(Sym(168),Sym(171))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169))
ReflectReadMutable repsW: List(Sym(168))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(168),Sym(171)),Summary(false,false,false,false,false,List((List(Sym(168)),List(ArrayApply(Sym(168),Sym(171))))),List(Sym(168)),List(Sym(168), Sym(164)),List(Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168)))
Alias: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(172)),Summary(false,false,false,false,true,List(),List(),List(Sym(172), Sym(168), Sym(164)),List(Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(164)),Summary(false,false,false,false,false,List(),List(),List(Sym(164)),List(Sym(164)),List(),List()),List(Sym(164)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172), Sym(173)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(175),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(175), Sym(172), Sym(168), Sym(164)),List(Sym(175), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172), Sym(175)))
Nested: WrappedArray(Sym(168)) Def: ArrayApply(Sym(168),Sym(171))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176))
ReflectReadMutable repsW: List(Sym(168))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(168),Sym(171)),Summary(false,false,false,false,false,List((List(Sym(168)),List(ArrayApply(Sym(168),Sym(171))))),List(Sym(168)),List(Sym(168), Sym(164)),List(Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168)))
Alias: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(2),Sym(167)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(172))Def: ArrayUpdate(Sym(168),Sym(171),Sym(177))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(168),Sym(171),Sym(177)),Summary(false,false,false,false,false,List(),List(),List(Sym(168), Sym(164), Sym(177)),List(Sym(168), Sym(164), Sym(177)),List(Sym(172)),List(Sym(172))),List(Sym(164), Sym(168), Sym(172), Sym(173), Sym(175), Sym(176), Sym(177)))
Alias: List(Sym(168), Sym(164), Sym(177))
Write: WrappedArray(Sym(164))Def: HashMapSetSize(Sym(164),Sym(179))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(164),Sym(179)),Summary(false,false,false,false,false,List(),List(),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(Sym(164))),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(178)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(182)),Summary(false,false,false,false,false,List(),List(),List(Sym(182), Sym(172), Sym(168), Sym(164)),List(Sym(182), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(182)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(184)),Summary(false,false,false,false,false,List(),List(),List(Sym(184), Sym(172), Sym(168), Sym(164)),List(Sym(184), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(184)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(191)),Summary(false,false,false,false,false,List(),List(),List(Sym(191), Sym(172), Sym(168), Sym(164)),List(Sym(191), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(191)))
Write: WrappedArray(Sym(173))Def: Assign(Variable(Sym(173)),Sym(192))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(173)),Sym(192)),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(192), Sym(191), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(192), Sym(191), Sym(172), Sym(168), Sym(164)),List(Sym(173)),List(Sym(173))),List(Sym(191), Sym(192)))
Alias: List(Sym(192), Sym(191), Sym(172), Sym(168), Sym(164))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(190)),Block(Sym(194))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164), Sym(182), Sym(191), Sym(192)),List(Sym(173), Sym(172), Sym(168), Sym(164), Sym(182)),List(Sym(173)),List()),List(Sym(164), Sym(168), Sym(172), Sym(173), Sym(175)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172), Sym(173), Sym(195)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(196)),Summary(false,false,false,false,false,List(),List(),List(Sym(196), Sym(172), Sym(168), Sym(164)),List(Sym(196), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172), Sym(196)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172), Sym(173), Sym(195)))
Write: WrappedArray(Sym(196))Def: EntrySetValue(Sym(196),Sym(167))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(196),Sym(167)),Summary(false,false,false,false,false,List(),List(),List(Sym(196), Sym(172), Sym(168), Sym(164)),List(Sym(196), Sym(172), Sym(168), Sym(164)),List(Sym(196)),List(Sym(196))),List(Sym(164), Sym(168), Sym(172), Sym(196), Sym(197)))
Alias: List(Sym(172), Sym(168), Sym(164))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(173))),Summary(false,false,false,false,false,List(),List(),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(Sym(173), Sym(172), Sym(168), Sym(164)),List(),List()),List(Sym(164), Sym(168), Sym(172), Sym(173), Sym(195)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Const(2),Sym(167)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(196))Def: EntrySetNext(Sym(196),Sym(201))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(196),Sym(201)),Summary(false,false,false,false,false,List(),List(),List(Sym(196), Sym(172), Sym(168), Sym(164), Sym(201)),List(Sym(196), Sym(172), Sym(168), Sym(164), Sym(201)),List(Sym(196)),List(Sym(196))),List(Sym(164), Sym(168), Sym(172), Sym(196), Sym(197), Sym(201)))
Alias: List(Sym(172), Sym(168), Sym(164), Sym(201))
Write: WrappedArray(Sym(164))Def: HashMapSetSize(Sym(164),Sym(179))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(164),Sym(179)),Summary(false,false,false,false,false,List(),List(),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(Sym(164))),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(195), Sym(196), Sym(197), Sym(202)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(198),Block(Sym(200)),Block(Sym(204))),Summary(false,false,false,false,false,List(),List(),List(Sym(196), Sym(172), Sym(168), Sym(164)),List(Sym(196), Sym(172), Sym(168), Sym(164)),List(Sym(196), Sym(164)),List(Sym(196))),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(195), Sym(196), Sym(197)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(176),Block(Sym(181)),Block(Sym(206))),Summary(false,false,false,false,false,List(),List(),List(Sym(168), Sym(164), Sym(173), Sym(172), Sym(182), Sym(191), Sym(192), Sym(196)),List(Sym(168), Sym(164)),List(Sym(172), Sym(164), Sym(173), Sym(196)),List()),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(165))),Summary(false,false,false,false,false,List(),List(),List(Sym(165)),List(Sym(165)),List(),List()),List(Sym(165), Sym(166)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(165))),Summary(false,false,false,false,false,List(),List(),List(Sym(165)),List(Sym(165)),List(),List()),List(Sym(165), Sym(166)))
Nested: WrappedArray(Sym(164)) Def: HashMapGetTable(Sym(164))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207))
ReflectReadMutable repsW: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(164)),Summary(false,false,false,false,false,List((List(Sym(164)),List(HashMapGetTable(Sym(164))))),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(),List()),List(Sym(164), Sym(207)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(208)),Summary(false,false,false,false,false,List(),List(),List(Sym(208), Sym(164)),List(Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208)))
Nested: WrappedArray(Sym(208)) Def: ArrayApply(Sym(208),Sym(222))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220))
ReflectReadMutable repsW: List(Sym(208))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(208),Sym(222)),Summary(false,false,false,false,false,List((List(Sym(208)),List(ArrayApply(Sym(208),Sym(222))))),List(Sym(208)),List(Sym(208), Sym(164)),List(Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208)))
Alias: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(223)),Summary(false,false,false,false,true,List(),List(),List(Sym(223), Sym(208), Sym(164)),List(Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(224))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(224)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(225),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(225), Sym(223), Sym(208), Sym(164)),List(Sym(225), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(225)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(224))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(227)),Summary(false,false,false,false,false,List(),List(),List(Sym(227), Sym(223), Sym(208), Sym(164)),List(Sym(227), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(227)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(224))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(229)),Summary(false,false,false,false,false,List(),List(),List(Sym(229), Sym(223), Sym(208), Sym(164)),List(Sym(229), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(229)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(224))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(236)),Summary(false,false,false,false,false,List(),List(),List(Sym(236), Sym(223), Sym(208), Sym(164)),List(Sym(236), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(236)))
Write: WrappedArray(Sym(224))Def: Assign(Variable(Sym(224)),Sym(237))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(224)),Sym(237)),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(237), Sym(236), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(237), Sym(236), Sym(223), Sym(208), Sym(164)),List(Sym(224)),List(Sym(224))),List(Sym(236), Sym(237)))
Alias: List(Sym(237), Sym(236), Sym(223), Sym(208), Sym(164))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(235)),Block(Sym(239))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164), Sym(227), Sym(236), Sym(237)),List(Sym(224), Sym(223), Sym(208), Sym(164), Sym(227)),List(Sym(224)),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(224), Sym(225)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(224))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(224), Sym(240)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(241)),Summary(false,false,false,false,false,List(),List(),List(Sym(241), Sym(223), Sym(208), Sym(164)),List(Sym(241), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(241)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(224))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(Sym(224), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(224), Sym(240)))
NestedDeps: List()
Reflect: Reflect(EntryGetValue(Sym(241)),Summary(false,false,false,false,false,List(),List(),List(Sym(241), Sym(223), Sym(208), Sym(164)),List(Sym(241), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(241)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(243),Block(Sym(245)),Block(Const(null))),Summary(false,false,false,false,false,List(),List(),List(Sym(241), Sym(223), Sym(208), Sym(164)),List(),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(241)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(226),Block(Const(null)),Block(Sym(247))),Summary(false,false,false,false,false,List(),List(),List(Sym(224), Sym(223), Sym(208), Sym(164), Sym(227), Sym(236), Sym(237), Sym(241)),List(),List(Sym(224)),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(224), Sym(225)))
Nested: WrappedArray(Sym(164)) Def: HashMapGetTable(Sym(164))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248))
ReflectReadMutable repsW: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(164)),Summary(false,false,false,false,false,List((List(Sym(164)),List(HashMapGetTable(Sym(164))))),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(),List()),List(Sym(164), Sym(207)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(208)),Summary(false,false,false,false,false,List(),List(),List(Sym(208), Sym(164)),List(Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208)))
Nested: WrappedArray(Sym(208)) Def: ArrayApply(Sym(208),Sym(222))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248))
ReflectReadMutable repsW: List(Sym(208))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(208),Sym(222)),Summary(false,false,false,false,false,List((List(Sym(208)),List(ArrayApply(Sym(208),Sym(222))))),List(Sym(208)),List(Sym(208), Sym(164)),List(Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208)))
Alias: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(223)),Summary(false,false,false,false,true,List(),List(),List(Sym(223), Sym(208), Sym(164)),List(Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223)))
NestedDeps: List()
Reflect: Reflect(HashMapGetSize(Sym(164)),Summary(false,false,false,false,false,List(),List(),List(Sym(164)),List(Sym(164)),List(),List()),List(Sym(164), Sym(207)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(250)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(252),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(252), Sym(223), Sym(208), Sym(164)),List(Sym(252), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(252)))
Nested: WrappedArray(Sym(208)) Def: ArrayApply(Sym(208),Sym(222))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253))
ReflectReadMutable repsW: List(Sym(208))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(208),Sym(222)),Summary(false,false,false,false,false,List((List(Sym(208)),List(ArrayApply(Sym(208),Sym(222))))),List(Sym(208)),List(Sym(208), Sym(164)),List(Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208)))
Alias: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Sym(167),Sym(249)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(223))Def: ArrayUpdate(Sym(208),Sym(222),Sym(254))
NestedDeps: List()
Reflect: Reflect(ArrayUpdate(Sym(208),Sym(222),Sym(254)),Summary(false,false,false,false,false,List(),List(),List(Sym(208), Sym(164), Sym(254)),List(Sym(208), Sym(164), Sym(254)),List(Sym(223)),List(Sym(223))),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(252), Sym(253), Sym(254)))
Alias: List(Sym(208), Sym(164), Sym(254))
Write: WrappedArray(Sym(164))Def: HashMapSetSize(Sym(164),Sym(256))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(164),Sym(256)),Summary(false,false,false,false,false,List(),List(),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(Sym(164))),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253), Sym(255)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(259)),Summary(false,false,false,false,false,List(),List(),List(Sym(259), Sym(223), Sym(208), Sym(164)),List(Sym(259), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(259)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(261)),Summary(false,false,false,false,false,List(),List(),List(Sym(261), Sym(223), Sym(208), Sym(164)),List(Sym(261), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(261)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(268)),Summary(false,false,false,false,false,List(),List(),List(Sym(268), Sym(223), Sym(208), Sym(164)),List(Sym(268), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(268)))
Write: WrappedArray(Sym(250))Def: Assign(Variable(Sym(250)),Sym(269))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(250)),Sym(269)),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(269), Sym(268), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(269), Sym(268), Sym(223), Sym(208), Sym(164)),List(Sym(250)),List(Sym(250))),List(Sym(268), Sym(269)))
Alias: List(Sym(269), Sym(268), Sym(223), Sym(208), Sym(164))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(267)),Block(Sym(271))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164), Sym(259), Sym(268), Sym(269)),List(Sym(250), Sym(223), Sym(208), Sym(164), Sym(259)),List(Sym(250)),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(250), Sym(252)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(250), Sym(272)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(273)),Summary(false,false,false,false,false,List(),List(),List(Sym(273), Sym(223), Sym(208), Sym(164)),List(Sym(273), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(273)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(250), Sym(272)))
Write: WrappedArray(Sym(273))Def: EntrySetValue(Sym(273),Sym(249))
NestedDeps: List()
Reflect: Reflect(EntrySetValue(Sym(273),Sym(249)),Summary(false,false,false,false,false,List(),List(),List(Sym(273), Sym(223), Sym(208), Sym(164)),List(Sym(273), Sym(223), Sym(208), Sym(164)),List(Sym(273)),List(Sym(273))),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(273), Sym(274)))
Alias: List(Sym(223), Sym(208), Sym(164))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(250))),Summary(false,false,false,false,false,List(),List(),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(Sym(250), Sym(223), Sym(208), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(250), Sym(272)))
NestedDeps: List()
Reflect: Reflect(EntryCreate(Sym(167),Sym(249)),Summary(false,false,false,false,true,List(),List(),List(),List(),List(),List()),List())
Write: WrappedArray(Sym(273))Def: EntrySetNext(Sym(273),Sym(278))
NestedDeps: List()
Reflect: Reflect(EntrySetNext(Sym(273),Sym(278)),Summary(false,false,false,false,false,List(),List(),List(Sym(273), Sym(223), Sym(208), Sym(164), Sym(278)),List(Sym(273), Sym(223), Sym(208), Sym(164), Sym(278)),List(Sym(273)),List(Sym(273))),List(Sym(164), Sym(207), Sym(208), Sym(223), Sym(273), Sym(274), Sym(278)))
Alias: List(Sym(223), Sym(208), Sym(164), Sym(278))
Write: WrappedArray(Sym(164))Def: HashMapSetSize(Sym(164),Sym(256))
NestedDeps: List()
Reflect: Reflect(HashMapSetSize(Sym(164),Sym(256)),Summary(false,false,false,false,false,List(),List(),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(Sym(164))),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253), Sym(272), Sym(273), Sym(274), Sym(279)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(275),Block(Sym(277)),Block(Sym(281))),Summary(false,false,false,false,false,List(),List(),List(Sym(273), Sym(223), Sym(208), Sym(164)),List(Sym(273), Sym(223), Sym(208), Sym(164)),List(Sym(273), Sym(164)),List(Sym(273))),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253), Sym(272), Sym(273), Sym(274)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(253),Block(Sym(258)),Block(Sym(283))),Summary(false,false,false,false,false,List(),List(),List(Sym(208), Sym(164), Sym(250), Sym(223), Sym(259), Sym(268), Sym(269), Sym(273)),List(Sym(208), Sym(164)),List(Sym(223), Sym(164), Sym(250), Sym(273)),List()),List(Sym(164), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253)))
Nested: WrappedArray(Sym(164)) Def: HashMapGetTable(Sym(164))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253), Sym(284))
ReflectReadMutable repsW: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(HashMapGetTable(Sym(164)),Summary(false,false,false,false,false,List((List(Sym(164)),List(HashMapGetTable(Sym(164))))),List(Sym(164)),List(Sym(164)),List(Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284)))
Alias: List()
NestedDeps: List()
Reflect: Reflect(ArrayLength(Sym(285)),Summary(false,false,false,false,false,List(),List(),List(Sym(285), Sym(164)),List(Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285)))
Nested: WrappedArray(Sym(285)) Def: ArrayApply(Sym(285),Sym(288))
Context: List(Sym(164), Sym(165), Sym(166), Sym(167), Sym(168), Sym(169), Sym(172), Sym(173), Sym(174), Sym(175), Sym(176), Sym(207), Sym(208), Sym(220), Sym(223), Sym(224), Sym(225), Sym(226), Sym(248), Sym(250), Sym(251), Sym(252), Sym(253), Sym(284), Sym(285), Sym(286))
ReflectReadMutable repsW: List(Sym(285))
NestedDeps: List()
Reflect: Reflect(ArrayApply(Sym(285),Sym(288)),Summary(false,false,false,false,false,List((List(Sym(285)),List(ArrayApply(Sym(285),Sym(288))))),List(Sym(285)),List(Sym(285), Sym(164)),List(Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285)))
Alias: List(Sym(164))
NestedDeps: List()
Reflect: Reflect(NewVar(Sym(289)),Summary(false,false,false,false,true,List(),List(),List(Sym(289), Sym(285), Sym(164)),List(Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(290))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(290)))
NestedDeps: List()
Reflect: Reflect(Equal(Sym(291),Const(null)),Summary(false,false,false,false,false,List(),List(),List(Sym(291), Sym(289), Sym(285), Sym(164)),List(Sym(291), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(291)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(290))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryHasNext(Sym(293)),Summary(false,false,false,false,false,List(),List(),List(Sym(293), Sym(289), Sym(285), Sym(164)),List(Sym(293), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(293)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(290))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(295)),Summary(false,false,false,false,false,List(),List(),List(Sym(295), Sym(289), Sym(285), Sym(164)),List(Sym(295), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(295)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(290))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(),List()),List())
NestedDeps: List()
Reflect: Reflect(EntryNext(Sym(302)),Summary(false,false,false,false,false,List(),List(),List(Sym(302), Sym(289), Sym(285), Sym(164)),List(Sym(302), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(302)))
Write: WrappedArray(Sym(290))Def: Assign(Variable(Sym(290)),Sym(303))
NestedDeps: List()
Reflect: Reflect(Assign(Variable(Sym(290)),Sym(303)),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(303), Sym(302), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(303), Sym(302), Sym(289), Sym(285), Sym(164)),List(Sym(290)),List(Sym(290))),List(Sym(302), Sym(303)))
Alias: List(Sym(303), Sym(302), Sym(289), Sym(285), Sym(164))
NestedDeps: List()
Reflect: Reflect(While(Block(Sym(301)),Block(Sym(305))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164), Sym(293), Sym(302), Sym(303)),List(Sym(290), Sym(289), Sym(285), Sym(164), Sym(293)),List(Sym(290)),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(290), Sym(291)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(290))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(290), Sym(306)))
NestedDeps: List()
Reflect: Reflect(EntryGetKey(Sym(307)),Summary(false,false,false,false,false,List(),List(),List(Sym(307), Sym(289), Sym(285), Sym(164)),List(Sym(307), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(307)))
NestedDeps: List()
Reflect: Reflect(ReadVar(Variable(Sym(290))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(Sym(290), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(290), Sym(306)))
NestedDeps: List()
Reflect: Reflect(EntryGetValue(Sym(307)),Summary(false,false,false,false,false,List(),List(),List(Sym(307), Sym(289), Sym(285), Sym(164)),List(Sym(307), Sym(289), Sym(285), Sym(164)),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(307)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(309),Block(Sym(311)),Block(Const(null))),Summary(false,false,false,false,false,List(),List(),List(Sym(307), Sym(289), Sym(285), Sym(164)),List(),List(),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(307)))
NestedDeps: List()
Reflect: Reflect(IfThenElse(Sym(292),Block(Const(null)),Block(Sym(313))),Summary(false,false,false,false,false,List(),List(),List(Sym(290), Sym(289), Sym(285), Sym(164), Sym(293), Sym(302), Sym(303), Sym(307)),List(),List(Sym(290)),List()),List(Sym(164), Sym(207), Sym(284), Sym(285), Sym(289), Sym(290), Sym(291)))
NestedDeps: List()
Reflect: Reflect(PrintLn(Sym(314)),Summary(true,true,false,false,false,List(),List(),List(),List(),List(),List()),List())
/*****************************************
  Emitting Generated Code                  
*******************************************/
class IntHashMapGetAndUpdateOptVar extends ((Int)=>(Unit)) {
def apply(x163:Int): Unit = {
val x164 = new HashMap[Int,Int]()
var x165 = 1
x165 = 2
val x167 = x165
val x168 = x164.table
val x169 = x168.length
val x5 = 2.hashCode
val x6 = x5.toLong
val x7 = x6 >>> 20
val x8 = x6 >>> 12
val x9 = x7 ^ x8
val x10 = x9 ^ x6
val x11 = x10 >>> 7
val x12 = x10 ^ x11
val x13 = x10 >>> 4
val x14 = x12 ^ x13
val x15 = x14.toInt
val x170 = x169 - 1
val x171 = x15 & x170
val x172 = x168(x171)
var x173 = x172
val x174 = x164.size
val x175 = x173
val x176 = x175 == null
if (x176) {
val x177 = new Entry(2, x167)
x168(x171) = x177
val x179 = x174 + 1
x164.size = x179

} else {
while ({
val x182 = x173
val x183 = x182.hasNext
val x189 = if (x183) {
val x184 = x173
val x185 = x184.key
val x186 = x185 != 2

x186
} else false

x189
}) {
val x191 = x173
val x192 = x191.next
x173 = x192
()
}
val x196 = x173
val x197 = x196.key
val x198 = x197 == 2
if (x198) {
x196.value = x167

} else {
val x201 = new Entry(2, x167)
x196.next = x201
val x179 = x174 + 1
x164.size = x179

}

}
val x208 = x164.table
val x220 = x208.length
val x209 = x167.hashCode
val x210 = x209.toLong
val x211 = x210 >>> 20
val x212 = x210 >>> 12
val x213 = x211 ^ x212
val x214 = x213 ^ x210
val x215 = x214 >>> 7
val x216 = x214 ^ x215
val x217 = x214 >>> 4
val x218 = x216 ^ x217
val x219 = x218.toInt
val x221 = x220 - 1
val x222 = x219 & x221
val x223 = x208(x222)
var x224 = x223
val x225 = x224
val x226 = x225 == null
val x248 = if (x226) {
null
} else {
while ({
val x227 = x224
val x228 = x227.hasNext
val x234 = if (x228) {
val x229 = x224
val x230 = x229.key
val x231 = x230 != x167

x231
} else false

x234
}) {
val x236 = x224
val x237 = x236.next
x224 = x237
()
}
val x241 = x224
val x242 = x241.key
val x243 = x242 == x167
val x246 = if (x243) {
val x244 = x241.value
x244
} else {
null
}
x246
}
var x250 = x223
val x251 = x164.size
val x252 = x250
val x253 = x252 == null
if (x253) {
val x249 = x248 + 1
val x254 = new Entry(x167, x249)
x208(x222) = x254
val x256 = x251 + 1
x164.size = x256

} else {
while ({
val x259 = x250
val x260 = x259.hasNext
val x266 = if (x260) {
val x261 = x250
val x262 = x261.key
val x263 = x262 != x167

x263
} else false

x266
}) {
val x268 = x250
val x269 = x268.next
x250 = x269
()
}
val x273 = x250
val x274 = x273.key
val x275 = x274 == x167
if (x275) {
val x249 = x248 + 1
x273.value = x249

} else {
val x249 = x248 + 1
val x278 = new Entry(x167, x249)
x273.next = x278
val x256 = x251 + 1
x164.size = x256

}

}
val x285 = x164.table
val x286 = x285.length
val x287 = x286 - 1
val x288 = x15 & x287
val x289 = x285(x288)
var x290 = x289
val x291 = x290
val x292 = x291 == null
val x314 = if (x292) {
null
} else {
while ({
val x293 = x290
val x294 = x293.hasNext
val x300 = if (x294) {
val x295 = x290
val x296 = x295.key
val x297 = x296 != 2

x297
} else false

x300
}) {
val x302 = x290
val x303 = x302.next
x290 = x303
()
}
val x307 = x290
val x308 = x307.key
val x309 = x308 == 2
val x312 = if (x309) {
val x310 = x307.value
x310
} else {
null
}
x312
}
println(x314)
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
