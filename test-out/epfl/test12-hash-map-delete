/*****************************************
  Emitting Generated Code                  
*******************************************/
class IntHashMapDelete extends ((Int)=>(Unit)) {
def apply(x141:Int): Unit = {
val x142 = new HashMap[Int,Int]()
val x143 = x142.table
val x144 = x143.length
val x2 = 1.hashCode
val x3 = x2.toLong
val x4 = x3 >>> 20
val x5 = x3 >>> 12
val x6 = x4 ^ x5
val x7 = x6 ^ x3
val x8 = x7 >>> 7
val x9 = x7 ^ x8
val x10 = x7 >>> 4
val x11 = x9 ^ x10
val x12 = x11.toInt
val x145 = x144 - 1
val x146 = x12 & x145
val x147 = x143(x146)
var x148 = x147
val x149 = x148
val x150 = x149 == null
if (x150) {
val x151 = new Entry(1, 2)
x143(x146) = x151
val x153 = x142.size
val x154 = x153 + 1
x142.size = x154

} else {
while ({
val x157 = x148
val x158 = x157.hasNext
val x164 = if (x158) {
val x159 = x148
val x160 = x159.key
val x161 = x160 != 1

x161
} else false

x164
}) {
val x166 = x148
val x167 = x166.next
x148 = x167
()
}
val x171 = x148
val x172 = x171.key
val x173 = x172 == 1
if (x173) {
x171.value = 2

} else {
val x176 = new Entry(1, 2)
x171.next = x176
val x178 = x142.size
val x179 = x178 + 1
x142.size = x179

}

}
val x54 = 2.hashCode
val x55 = x54.toLong
val x56 = x55 >>> 20
val x57 = x55 >>> 12
val x58 = x56 ^ x57
val x59 = x58 ^ x55
val x60 = x59 >>> 7
val x61 = x59 ^ x60
val x62 = x59 >>> 4
val x63 = x61 ^ x62
val x64 = x63.toInt
val x185 = x64 & x145
val x186 = x143(x185)
var x187 = x186
val x188 = x187
val x189 = x188 == null
if (x189) {
val x190 = new Entry(2, 3)
x143(x185) = x190
val x192 = x142.size
val x193 = x192 + 1
x142.size = x193

} else {
while ({
val x196 = x187
val x197 = x196.hasNext
val x203 = if (x197) {
val x198 = x187
val x199 = x198.key
val x200 = x199 != 2

x200
} else false

x203
}) {
val x205 = x187
val x206 = x205.next
x187 = x206
()
}
val x210 = x187
val x211 = x210.key
val x212 = x211 == 2
if (x212) {
x210.value = 3

} else {
val x215 = new Entry(2, 3)
x210.next = x215
val x217 = x142.size
val x218 = x217 + 1
x142.size = x218

}

}
val x224 = x142.size
println(x224)
var x226 = null
var x227 = x186
val x228 = x227
val x229 = x228 != null
if (x229) {
while ({
val x230 = x227
val x231 = x230.hasNext
val x237 = if (x231) {
val x232 = x227
val x233 = x232.key
val x234 = x233 != 2

x234
} else false

x237
}) {
val x239 = x227
x226 = x239
val x241 = x239.next
x227 = x241
()
}
val x245 = x226
val x246 = x245 == null
if (x246) {
x143(x185) = null

} else {
val x249 = x227
val x250 = x249.key
val x251 = x250 == 2
if (x251) {
val x252 = x249.next
x245.next = x252

} else {
()
}

}

} else {
()
}
println(x224)
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
